// Cell size
cx := 5e-9
cy := 66e-10

cz := 5e-9
magnet_height := 100e-9
magnet_width := 500e-9
magnet_thickness := 50e-9

nanotube_width := 5e-9
nanotube_height := 1820e-9

x_displacement := 500e-9
y_displacement := 380e-9 //displacements are to shapes centres
z_displacement := magnet_thickness + 100e-9 + nanotube_width/2 // nanotube is 100nm above magnets

SetGridsize(300,276,64)
SetCellsize(cx,cy,cz)


// magnet definitions
magnets := universe().sub(universe())
system := universe().sub(universe())


rect1 := cuboid(magnet_width, magnet_height,magnet_thickness)
rect2 := cuboid(nanotube_width,nanotube_height, nanotube_width)


for i:=0; i<=0; i+=1{
	top_left := rect1.transl(-i * magnet_width * 2 - x_displacement ,y_displacement,0)
	top_right := rect1.transl(i * magnet_width * 2 + x_displacement ,y_displacement,0)
	bottom_left := rect1.transl(-i * magnet_width * 2,-y_displacement,0) // this includes the centre magnet for i = 0
	if i > 0 {
		bottom_right := rect1.transl(i * magnet_width * 2,-y_displacement,0)
		magnets = magnets.add(top_left).add(bottom_left).add(top_right).add(bottom_right)

	} else {
		magnets = magnets.add(top_left).add(bottom_left).add(top_right)
	}
}

nanotube := rect2.transl(0, 0, z_displacement) //.rotz(-5*pi/180)
system = system.add(nanotube).add(magnets)


setgeom(system)
snapshot(geom)

// DefRegion first number is material, next argument is the shape.
// transl moves the object to a new location
DefRegion(1,magnets)
DefRegion(2,nanotube)

save(regions)

// Permalloy parameters
Msat  = 800e3
Aex   = 13e-12
alpha = 0.1
EdgeSmooth = 8

// At the start of a simulation all cells have region number 0.
// Following lines set the parameters of these regions to zero
Msat.SetRegion(0, 0)
m.SetRegion(0, uniform(0,0,0))
Aex.SetRegion(0, 0)

// Permalloy parameters

Msat.SetRegion(1, 800e3)
Aex.SetRegion(1, 13e-12)
alpha.SetRegion(1, 0.05)

// Set parameters for CNT region
Msat.SetRegion(2, 0)
m.SetRegion(2, uniform(0,0,0))
Aex.SetRegion(2, 0)

// m is Reduced magnetization
// set m in region 1 (inside the nanomagnets)
m.SetRegion(1,randomMag())  // uniform field in (x,y,z)

B_ext = vector(0, 0, 250.0e-3)


relax()  // slower but robust for large changes - allow the system to play out and reach equilibrium
save(B_eff)    // relaxed state
