//mumax 3.10 [linux_amd64 go1.14(gc) CUDA-10.1]
//GPU info: Tesla P100-PCIE-16GB(16280MB), CUDA Driver 11.2, cc=6.0, using cc=60 PTX
//(c) Arne Vansteenkiste, Dynamat LAB, Ghent University, Belgium
//This is free software without any warranty. See license.txt
//********************************************************************//
//  If you use mumax in any work or publication,                      //
//  we kindly ask you to cite the references in references.bib        //
//********************************************************************//
//output directory: ./drive/MyDrive/simulation-0-x-shifted-0nm-right.out/
cx := 5e-9
cy := 66e-10
cz := 5e-9
magnet_height := 300e-9
magnet_width := 100e-9
magnet_thickness := 50e-9
nanotube_width := 5e-9
nanotube_height := 1820e-9
x_displacement_magnet := 100e-9
y_displacement_magnet := 380e-9
x_displacement_nanotube := 0
z_displacement_nanotube := magnet_thickness + 100e-9 + nanotube_width/2
SetGridsize(300, 276, 64)
SetCellsize(cx, cy, cz)
magnets := universe().sub(universe())
system := universe().sub(universe())
rect1 := cuboid(magnet_width, magnet_height, magnet_thickness)
rect2 := cuboid(nanotube_width, nanotube_height, nanotube_width)
for i := 0; i <= 0; i += 1 {
	top_left := rect1.transl(-i*magnet_width*2-x_displacement_magnet, y_displacement_magnet, 0)
	top_right := rect1.transl(i*magnet_width*2+x_displacement_magnet, y_displacement_magnet, 0)
	bottom_left := rect1.transl(-i*magnet_width*2, -y_displacement_magnet, 0)
	if i > 0 {
		bottom_right := rect1.transl(i*magnet_width*2, -y_displacement_magnet, 0)
		magnets = magnets.add(top_left).add(bottom_left).add(top_right).add(bottom_right)
	} else {
		magnets = magnets.add(top_left).add(bottom_left).add(top_right)
	}
}
nanotube := rect2.transl(x_displacement_nanotube, 0, z_displacement_nanotube)
system = system.add(nanotube).add(magnets)
setgeom(system)
snapshot(geom)
DefRegion(1, magnets)
DefRegion(2, nanotube)
save(regions)
Msat = 800e3
Aex = 13e-12
alpha = 0.1
EdgeSmooth = 8
Msat.SetRegion(0, 0)
m.SetRegion(0, uniform(0, 0, 0))
Aex.SetRegion(0, 0)
Msat.SetRegion(1, 800e3)
Aex.SetRegion(1, 13e-12)
alpha.SetRegion(1, 0.05)
Msat.SetRegion(2, 0)
m.SetRegion(2, uniform(0, 0, 0))
Aex.SetRegion(2, 0)
m.SetRegion(1, randomMag())
B_ext = vector(250.0e-3, 0, 0)
relax()
B_ext = vector(250.0e-3, 0, 0)
relax()
save(B_eff)
//********************************************************************//
//Please cite the following references, relevant for your simulation. //
//See bibtex file in output folder for justification.                 //
//********************************************************************//
//   * Vansteenkiste et al., AIP Adv. 4, 107133 (2014).
